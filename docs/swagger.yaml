definitions:
  dto.CreateUser:
    properties:
      email:
        maxLength: 64
        minLength: 10
        type: string
      fullName:
        maxLength: 64
        minLength: 5
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
      userName:
        maxLength: 64
        minLength: 5
        type: string
    required:
    - email
    - password
    - userName
    type: object
  dto.Profile:
    properties:
      email:
        type: string
      fullName:
        type: string
      userName:
        type: string
    type: object
  dto.ProfileUpdate:
    properties:
      fullName:
        maxLength: 64
        minLength: 5
        type: string
    type: object
  dto.TokenDetail:
    properties:
      accessToken:
        type: string
      accessTokenExpireTime:
        type: integer
      refreshToken:
        type: string
      refreshTokenExpireTime:
        type: integer
    type: object
  dto.UserLogin:
    properties:
      password:
        maxLength: 64
        minLength: 8
        type: string
      userName:
        maxLength: 64
        minLength: 5
        type: string
    required:
    - password
    - userName
    type: object
  dto.UserVerify:
    properties:
      code:
        maximum: 9999
        minimum: 1000
        type: integer
      userName:
        maxLength: 64
        minLength: 5
        type: string
    required:
    - code
    - userName
    type: object
  helper.BaseHttpResponse:
    properties:
      result: {}
      statusCode:
        type: integer
      success:
        type: boolean
    type: object
  helper.BaseHttpResponseWithError:
    properties:
      error: {}
      result: {}
      statusCode:
        type: integer
      success:
        type: boolean
    type: object
  helper.BaseHttpResponseWithValidationError:
    properties:
      result: {}
      statusCode:
        type: integer
      success:
        type: boolean
      validationErrors:
        items:
          $ref: '#/definitions/helper.ValidationError'
        type: array
    type: object
  helper.ValidationError:
    properties:
      error:
        type: string
      key:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/users/login/:
    post:
      consumes:
      - application/json
      description: user login
      parameters:
      - description: user login
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/dto.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: user login
          schema:
            allOf:
            - $ref: '#/definitions/helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/dto.TokenDetail'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/helper.BaseHttpResponseWithValidationError'
        "406":
          description: error while login user
          schema:
            $ref: '#/definitions/helper.BaseHttpResponseWithError'
      summary: user login
      tags:
      - Users
  /api/users/profile/:
    get:
      consumes:
      - application/json
      description: user profile
      produces:
      - application/json
      responses:
        "200":
          description: user profile info
          schema:
            allOf:
            - $ref: '#/definitions/helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/dto.Profile'
              type: object
        "401":
          description: UnAuthorization
          schema:
            $ref: '#/definitions/helper.BaseHttpResponseWithError'
      security:
      - AuthBearer: []
      summary: user profile
      tags:
      - Users
  /api/users/profile/update/:
    patch:
      consumes:
      - application/json
      description: user profile update
      parameters:
      - description: user profile update
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/dto.ProfileUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: user profile updated
          schema:
            allOf:
            - $ref: '#/definitions/helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/dto.Profile'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/helper.BaseHttpResponseWithValidationError'
        "406":
          description: not acceptable
          schema:
            $ref: '#/definitions/helper.BaseHttpResponseWithError'
      security:
      - AuthBearer: []
      summary: user profile update
      tags:
      - Users
  /api/users/register/:
    post:
      consumes:
      - application/json
      description: register user
      parameters:
      - description: Ù‹Register User
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: register user
          schema:
            $ref: '#/definitions/helper.BaseHttpResponse'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/helper.BaseHttpResponseWithValidationError'
        "406":
          description: error while register user
          schema:
            $ref: '#/definitions/helper.BaseHttpResponseWithError'
      summary: register user
      tags:
      - Users
  /api/users/verify/:
    post:
      consumes:
      - application/json
      description: user verify account
      parameters:
      - description: User verify
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/dto.UserVerify'
      produces:
      - application/json
      responses:
        "200":
          description: user verified
          schema:
            $ref: '#/definitions/helper.BaseHttpResponse'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/helper.BaseHttpResponseWithValidationError'
        "406":
          description: error while verifying user
          schema:
            $ref: '#/definitions/helper.BaseHttpResponseWithError'
      summary: user verify account
      tags:
      - Users
securityDefinitions:
  AuthBearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
